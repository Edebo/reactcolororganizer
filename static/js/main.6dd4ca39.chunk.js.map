{"version":3,"sources":["components/AddColorForm.js","components/Star.js","components/StarRating.js","components/Color.js","components/ColorList.js","components/App.js","index.js"],"names":["AddColorForm","_ref","title","color","_ref$onNewColor","onNewColor","f","react_default","a","createElement","onSubmit","e","preventDefault","value","ref","input","type","placeholder","required","Star","_ref$selected","selected","_ref$onClick","onClick","className","propType","PropTypes","bool","func","StarRating","_ref$starsSelected","starsSelected","_ref$totalStars","totalStars","_ref$onRate","onRate","Object","toConsumableArray","Array","map","n","i","components_Star","key","Color","_ref$rating","rating","_ref$onRemove","onRemove","style","backgroundColor","components_StarRating","ColorList","_ref$colors","colors","length","components_Color","assign","id","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","addColor","bind","assertThisInitialized","rateColor","removeColor","concat","v4","setState","objectSpread","filter","components_AddColorForm","components_ColorList","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.6dd4ca39.chunk.js","sourcesContent":["import React from 'react';\r\n/*class AddColorForm extends Component{\r\n  //construtctor needed so one can use the submit function\r\nconstructor(props){\r\n  super(props)\r\n  this.submit=this.submit.bind(this)\r\n}\r\n\r\n\r\n\r\nsubmit(e){\r\n  const refe=this.refs\r\n  e.preventDefault();//prevent the form from perfoming it normal action\r\n this.props.onNewColor(refe.title.value,refe.color.value)\r\n  refe.title.value=\"\";\r\n  refe.color.value=\"#000000\";\r\n  refe.title.focus()\r\n\r\n}\r\n\r\n  render(){\r\n    return(\r\n      <form onSubmit={this.submit}>\r\n        <input ref=\"title\" type='text' placeholder=\"Color title...\" required />\r\n        <input ref=\"color\" type=\"color\" required/>\r\n        <button>ADD</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nAddColorForm.propTypes={\r\n  onNewColor:PropTypes.func\r\n}\r\n\r\nAddColorForm.defaultProps={\r\n  onNewColor:f=>f\r\n}\r\n*/\r\n\r\n\r\nconst AddColorForm=({onNewColor=f=>f})=>{\r\n  let title,color\r\n  const submit=e=>{ \r\n    //prevent the form from perfoming it normal action \r\n  e.preventDefault();\r\n  onNewColor(title.value,color.value)\r\n  title.value=\"\";\r\n  color.value=\"#000000\";\r\n  \r\n  }\r\n  return(\r\n    <form onSubmit={submit}>\r\n        <input ref={input=> title=input} type='text' placeholder=\"Color title...\" required />\r\n        <input ref={input=>color=input} type=\"color\" required/>\r\n        <button>ADD</button>\r\n      </form>\r\n  )\r\n}\r\n      \r\nexport default AddColorForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport './star.css';\r\n\r\n//this is a stateless component\r\nconst Star=({selected=false,onClick=f=>f})=>\r\n    <div className={selected?\"star selected\":\"star\"} onClick={onClick}>\r\n\r\n    </div>\r\n// to specify the type of the props\r\n    Star.propType={\r\n        selected:PropTypes.bool,\r\n        onClick:PropTypes.func\r\n    }\r\n\r\nexport default Star;","import  React from 'react';\r\n\r\nimport Star from './Star.js'\r\n\r\n//var createReactClass=require('create-react-class');\r\n/*const StarRating=createReactClass({\r\n    displayName:'StarRating',\r\n    propTypes:{\r\n        TotalStars:PropTypes.number\r\n    },\r\n\r\n    getDefaultProps(){\r\n        return  {\r\n            TotalStars:5\r\n            }\r\n       },\r\n\r\n\r\n       //initialize starselected state\r\n    getInitialState(){\r\n        return{\r\n            starsSelected:0\r\n        }\r\n    },\r\n\r\n    // setting startsselected through props\r\n    componentWillMount(){\r\n        const{starsSelected}=this.props\r\n        if(starsSelected){\r\n            this.setState({starsSelected})\r\n        }\r\n    },\r\n\r\n    //update the starsselected\r\n    change(starsSelected){\r\n        this.setState({starsSelected})\r\n    },\r\n\r\n    render(){\r\n        const {TotalStars}=this.props\r\n        const {starsSelected}=this.state\r\n        return(\r\n            <div className='star-rating'>\r\n                {[...Array(TotalStars)].map((n,i)=>\r\n                    <Star key={i} selected={i<starsSelected}\r\n                          onClick={()=>this.change(i+1)}/>\r\n                    )}\r\n\r\n\r\n                <p>{starsSelected} out of {TotalStars}</p>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n});*/\r\n\r\nconst StarRating=({starsSelected=0,totalStars=5,onRate=f=>f})=>\r\n        <div>\r\n            {[...Array(totalStars)].map((n,i)=>\r\n                <Star key={i}\r\n                      selected={i<starsSelected}\r\n                      onClick={()=>onRate(i+1,starsSelected)}/>\r\n                      )}\r\n                      \r\n            <p>{starsSelected} out of {totalStars}</p>\r\n        </div>\r\n\r\n\r\nexport default StarRating;","import React from \"react\";\r\nimport StarRating from \"./StarRating\";\r\nimport './color.css';\r\n\r\nconst Color=({title,color,rating=0,onRemove=f=>f,onRate=f=>f})=>\r\n        <section className=\"color\">\r\n            <h1>{title}</h1>\r\n            <button onClick={onRemove}>x</button>\r\n            <div className=\"tile\" style={{backgroundColor:color}}></div>\r\n            <div> \r\n                <StarRating className='starrating' starsSelected={rating} onRate={onRate}/>\r\n            </div>\r\n        </section>\r\n\r\nexport default Color;","import React from 'react';\r\nimport Color from './Color.js';\r\n\r\n\r\nconst ColorList=({colors=[],onRemove=f=>f,onRate=f=>f})=>\r\n        \r\n            <div >\r\n                {\r\n                    (colors.length===0)?\r\n                    <p>No color Listed.(Add COLOR)</p>:\r\n                    colors.map(color=>\r\n                    <Color key={color.id}\r\n                           {...color}\r\n                            onRemove={()=>onRemove(color.id)} \r\n                            onRate={(rating)=>onRate(color.id,rating)}/>)\r\n                    }\r\n            </div>\r\n        \r\n\r\nexport default ColorList;","import React,{Component} from 'react';\r\nimport {v4} from 'uuid';\r\nimport AddColorForm from './AddColorForm.js';\r\nimport ColorList from './ColorList.js';\r\nimport './colorlist.css';\r\n\r\n class App extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            colors:[]\r\n        }\r\n        this.addColor=this.addColor.bind(this)\r\n        this.rateColor=this.rateColor.bind(this)\r\n        this.removeColor=this.removeColor.bind(this)   \r\n    }\r\n\r\n    addColor(title,color){\r\n\r\n        //the below lines of code concatenate the newcolor to the color array\r\n        const colors=[\r\n            ...this.state.colors,\r\n                {\r\n                    id:v4(),\r\n                    title,\r\n                    color,\r\n                    rating:0\r\n\r\n                }\r\n            ]\r\n        this.setState({colors})\r\n    }\r\n\r\n    rateColor(id,rating)\r\n    { \r\n         const colors=this.state.colors.map(color=>\r\n            (color.id!==id)?color:{...color,rating}\r\n            )\r\n\r\n            this.setState({colors})\r\n        }\r\n\r\n    removeColor(id){\r\n         const colors=this.state.colors.filter(\r\n             color=>color.id!==id\r\n         )   \r\n         this.setState({colors})\r\n    }\r\n\r\n    render(){\r\n      const {addColor,rateColor,removeColor}=this\r\n      \r\n      const {colors}=this.state\r\n        return(\r\n\r\n            <div className=\"app\">\r\n                <AddColorForm onNewColor={addColor}/>\r\n                <ColorList className='palette' colors={colors} onRemove={removeColor} onRate={rateColor}/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\n\n//import * as serviceWorker from './serviceWorker';\n\n//const logColor=(title,color)=>\n  //  console.log('New Color:'+ title +'|' + color)\n \n//ReactDOM.render(<AddColorForm onNewColor={logColor}\n //                       />, document.getElementById('root'));\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n//serviceWorker.unregister();\n"],"sourceRoot":""}